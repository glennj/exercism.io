A brief introduction to Wren
- Written in 2016 by Bob Nystrom, the author of Crafting Interpreters
- Goals: small, simple, fast.
- familiar class-based OO syntax.
- fits in a category of embeddable languages with Lua
- dynamically typed, but statically _defined_; allows the compiler to be very fast.

Why itâ€™s great
- Very lightweight
- Really good documentation
- Easy concurrency and coroutines with _fibers_
- if you're familiar with Java or C++, you'll be right at home.
- Most of the standard library is implemented in Wren, so you can see how it's implemented.
- long-time Exercism contributor Josh Goebel has implemented wren-console, a more fully-featured
  CLI for running scripts in the TDD Exercism environment. wren-console has a few added features
  not included in the standard library, like JSON handling, String functionality, etc.

Standout features
- Embeddable. The language creator was a former game developer: wanted to be able to add scripting facilities to games.
  The C API is quite clean and simple.
- Familiar syntax makes it quicker to get up to speed.
- Methods can be overloaded by _arity_
- Small but surprisingly complete standard library.
- has "functions", akin to ruby blocks or groovy closures, to support functional programming.
