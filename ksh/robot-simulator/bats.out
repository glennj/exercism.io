GNU bash, version 5.1.12(1)-release (x86_64-apple-darwin21.1.0)


+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ load bats-extra
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local file=bats-extra
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_at_origin_facing_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_at_origin_facing_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_at_negative_position_facing_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_at_negative_position_facing_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_at_origin_facing_fish
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_at_origin_facing_fish
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_north_to_east
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_SOURCE_FILE_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ setup_file
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ bats_replace_filename
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ local file_excluded= path
+ BATS_SETUP_FILE_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_run_tests
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local NORMALIZED_INPUT
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ local output_var=NORMALIZED_INPUT
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
+++ local file_excluded= path
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ file_excluded=1
+++ break
++ local file_excluded= path
+++ [[ -z 1 ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ local NORMALIZED_INPUT
+ status=0
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local output_var=NORMALIZED_INPUT
++ local NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ file_excluded=1
++ break
+++ break
++ [[ -z 1 ]]
+++ [[ -z 1 ]]
+ [[ 1 != 1 ]]
++ local line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+ for test_name in "${tests_to_run[@]}"
+++ local NORMALIZED_INPUT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local NORMALIZED_INPUT
+++ local output_var=NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ file_excluded=1
+++ break
++ local NORMALIZED_INPUT
+++ [[ -z 1 ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ read -r line
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ [[ -z 1 ]]
+++ local NORMALIZED_INPUT
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local NORMALIZED_INPUT
+++ local output_var=NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ file_excluded=1
+++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ file_excluded=1
++ break
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ [[ -z 1 ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+ [[ -n test_at_origin_facing_north ]]
+++ break
+++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ printf '%s\n' '++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file'
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ break
++ [[ -z 1 ]]
+++ local NORMALIZED_INPUT
+ (( ++test_number_in_suite ))
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local output_var=NORMALIZED_INPUT
++ local NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ break
+++ file_excluded=1
++ break
+++ break
++ [[ -z 1 ]]
+++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ read -r line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local NORMALIZED_INPUT
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ local output_var=NORMALIZED_INPUT
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_at_origin_facing_north 1 1
+++ [[ -z 1 ]]
++ local test_name=test_changes_north_to_east
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local NORMALIZED_INPUT'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z '' ]]
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local output_var=NORMALIZED_INPUT'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ NOTSET == NOTSET ]]
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ bats_capture_stack_trace
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local test_file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ local funcname
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ local i
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ BATS_STACK_TRACE=()
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local file_excluded= path'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ (( i = 2 ))
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ (( i != 5 ))
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ funcname=source
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ case "$funcname" in
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ [[ source == \s\o\u\r\c\e ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ file_excluded=1'
+++ break
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_emit_trace
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ break'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ [[ 0 -gt 0 ]]
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ bats_test_function test_changes_east_to_south
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ -z 1 ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
++ printf '%s\n' '++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ local NORMALIZED_INPUT
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local NORMALIZED_INPUT'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ local output_var=NORMALIZED_INPUT
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local output_var=NORMALIZED_INPUT'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local file_excluded= path
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ local file_excluded= path'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ file_excluded=1
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"'
+++ break
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ [[ -z 1 ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ local NORMALIZED_INPUT
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ file_excluded=1'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local output_var=NORMALIZED_INPUT
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ break'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '++ [[ -z 1 ]]'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%s\n' '+ return 0'
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ read -r line
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ -n '' ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_changes_east_to_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
++ bats_test_function test_at_origin_facing_north
+++ local funcname
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
+++ local i
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_at_origin_facing_north
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
+++ BATS_STACK_TRACE=()
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ (( i = 2 ))
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ case "$funcname" in
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ break
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_south_to_west
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ ms_since_epoch=1639849107620631000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ file_excluded=1
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849107620631000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ break
++ ms_since_epoch=1639849107620
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849107620
+++ [[ -z 1 ]]
+ BATS_TEST_START_TIME=1639849107620
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local test_name=test_changes_south_to_west
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_at_origin_facing_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
[1G   at origin facing north[K[75G 1/19[2G
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_west_to_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_changes_west_to_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
+++ file_excluded=1
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ break
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ -z 1 ]]
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ local file_excluded= path
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 1 'at origin facing north' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
[135A[1G ✓ at origin facing north[K
[0m[134B+++ [[ NOTSET == NOTSET ]]
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ bats_capture_stack_trace
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11525.out
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_north_to_west
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ local file_excluded= path
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ file_excluded=1
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_at_negative_position_facing_south ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
+++ break
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
+++ [[ -z 1 ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_at_negative_position_facing_south 2 2
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_changes_north_to_west
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_west_to_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_changes_west_to_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
++ load bats-extra
++ local file=bats-extra
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
+++ file_excluded=1
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_at_negative_position_facing_south
+++ break
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ [[ -z 1 ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ local output_var=NORMALIZED_INPUT
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ date +%s%N
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_changes_south_to_east
++ ms_since_epoch=1639849107740991000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849107740991000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ local NORMALIZED_INPUT
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849107740
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849107740
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+ BATS_TEST_START_TIME=1639849107740
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_at_negative_position_facing_south
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
[1G   at negative position facing south[K[75G 2/19[2G
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_changes_south_to_east
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ local i
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
+++ BATS_STACK_TRACE=()
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
+++ (( i = 2 ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
+++ bats_emit_trace
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ [[ 0 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_test_function test_changes_east_to_north
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ local NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 2 'at negative position facing south' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11534.out
[91A[1G ✓ at negative position facing south[K
[0m[90B+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
++ local test_name=test_changes_east_to_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ local NORMALIZED_INPUT
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_at_origin_facing_fish ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ local output_var=NORMALIZED_INPUT
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_at_origin_facing_fish 3 3
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_facing_north_increments_Y
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_facing_north_increments_Y
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
+++ bats_capture_stack_trace
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_at_origin_facing_fish
+++ local test_file
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+++ local funcname
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ local i
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ (( i = 2 ))
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ (( i != 5 ))
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ funcname=source
+++ [[ -z 1 ]]
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
++++ [[ -z 1 ]]
+++ date +%s%N
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_facing_south_decrements_Y
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ ms_since_epoch=1639849107856605000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849107856605000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ file_excluded=1
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849107856
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849107856
+++ break
+++ [[ -z 1 ]]
+ BATS_TEST_START_TIME=1639849107856
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_at_origin_facing_fish
++ local test_name=test_facing_south_decrements_Y
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
[1G   at origin facing fish[K[75G 3/19[2G
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_facing_east_increments_X
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
+++ file_excluded=1
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
+++ break
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local file_excluded= path
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ file_excluded=1
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ break
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 3 'at origin facing fish' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ -z 1 ]]
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11543.out
[92A[1G ✓ at origin facing fish[K
[0m[91B++ local test_name=test_facing_east_increments_X
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ -z '' ]]
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_north_to_east ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
+++ [[ NOTSET == NOTSET ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
+++ bats_capture_stack_trace
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_north_to_east 4 4
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_facing_west_decrements_X
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_facing_west_decrements_X
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_moving_east_and_north_from_README
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
+++ local NORMALIZED_INPUT
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ bats_test_function test_at_origin_facing_north
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+++ local file_excluded= path
+ bats_perform_test
+ declare -F test_changes_north_to_east
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ local NORMALIZED_INPUT
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_moving_east_and_north_from_README
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
++ ms_since_epoch=1639849107975008000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849107975008000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ local NORMALIZED_INPUT
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849107975
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849107975
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+ BATS_TEST_START_TIME=1639849107975
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_north_to_east
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
[1G   changes north to east[K[75G 4/19[2G
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_moving_west_and_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
+++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ local test_name=test_moving_west_and_north
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
+++ local NORMALIZED_INPUT
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ file_excluded=1
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ break
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ BATS_TEST_NAMES+=("$test_name")
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ local NORMALIZED_INPUT
+ printf 'ok %d %s%s\n' 4 'changes north to east' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11552.out
[87A[1G ✓ changes north to east[K
[0m[86B+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+++ break
+++ bats_emit_trace
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ 0 -gt 0 ]]
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ bats_test_function test_moving_west_and_south
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_east_to_south ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_east_to_south 5 5
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local test_name=test_moving_west_and_south
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
+++ bats_debug_trap /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local output_var=NORMALIZED_INPUT
+++ local path=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == ?:* ]]
+++ NORMALIZED_INPUT=/var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ printf -v NORMALIZED_INPUT %s /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ [[ -z '' ]]
+++ [[ NOTSET == NOTSET ]]
+++ bats_capture_stack_trace
+++ local test_file
+++ local funcname
+++ local i
+++ BATS_CURRENT_STACK_TRACE=("${BATS_STACK_TRACE[@]+"${BATS_STACK_TRACE[@]}"}")
+++ BATS_STACK_TRACE=()
+++ (( i = 2 ))
+++ (( i != 5 ))
+++ test_file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats
+++ funcname=source
+++ BATS_STACK_TRACE+=("${BASH_LINENO[$((i - 1))]} $funcname $test_file")
+++ case "$funcname" in
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file == *\b\a\t\s\-\e\x\e\c\-\f\i\l\e ]]
+++ [[ source == \s\o\u\r\c\e ]]
+++ break
+++ bats_emit_trace
+++ [[ 0 -gt 0 ]]
++ bats_test_function test_moving_east_and_north
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
+++ file_excluded=1
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
+++ break
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_east_to_south
+++ [[ -z 1 ]]
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ local test_name=test_moving_east_and_north
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/test_functions.bash
+++ local NORMALIZED_INPUT
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ local output_var=NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ BATS_TEST_NAMES+=("$test_name")
++ ms_since_epoch=1639849108088715000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108088715000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108088
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108088
+ BATS_TEST_START_TIME=1639849108088
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_east_to_south
[1G   changes east to south[K[75G 5/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 5 'changes east to south' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11561.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_south_to_west ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_south_to_west 6 6
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_south_to_west
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108195647000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108195647000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108195
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108195
+ BATS_TEST_START_TIME=1639849108195
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_south_to_west
[1G ✓ changes east to south[K
[0m[1G   changes south to west[K[75G 6/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 6 'changes south to west' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11570.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_west_to_north ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_west_to_north 7 7
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_west_to_north
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108302220000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108302220000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108302
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108302
+ BATS_TEST_START_TIME=1639849108302
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_west_to_north
[1G ✓ changes south to west[K
[0m[1G   changes west to north[K[75G 7/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 7 'changes west to north' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11579.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_north_to_west ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_north_to_west 8 8
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_north_to_west
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108410930000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108410930000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108410
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108410
+ BATS_TEST_START_TIME=1639849108410
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_north_to_west
[1G ✓ changes west to north[K
[0m[1G   changes north to west[K[75G 8/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 8 'changes north to west' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11588.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_west_to_south ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_west_to_south 9 9
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_west_to_south
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108513643000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108513643000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108513
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108513
+ BATS_TEST_START_TIME=1639849108513
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_west_to_south
[1G ✓ changes north to west[K
[0m[1G   changes west to south[K[75G 9/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 9 'changes west to south' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11597.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_south_to_east ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_south_to_east 10 10
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_south_to_east
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108618340000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108618340000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108618
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108618
+ BATS_TEST_START_TIME=1639849108618
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_south_to_east
[1G ✓ changes west to south[K
[0m[1G   changes south to east[K[75G10/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 10 'changes south to east' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11606.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_changes_east_to_north ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_changes_east_to_north 11 11
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_changes_east_to_north
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108725002000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108725002000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108725
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108725
+ BATS_TEST_START_TIME=1639849108725
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_changes_east_to_north
[1G ✓ changes south to east[K
[0m[1G   changes east to north[K[75G11/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 11 'changes east to north' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11615.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_facing_north_increments_Y ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_facing_north_increments_Y 12 12
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_facing_north_increments_Y
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108827455000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108827455000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108827
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108827
+ BATS_TEST_START_TIME=1639849108827
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_facing_north_increments_Y
[1G ✓ changes east to north[K
[0m[1G   facing north increments Y[K[75G12/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 12 'facing north increments Y' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11624.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_facing_south_decrements_Y ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_facing_south_decrements_Y 13 13
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_facing_south_decrements_Y
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849108938610000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849108938610000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849108938
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849108938
+ BATS_TEST_START_TIME=1639849108938
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_facing_south_decrements_Y
[1G ✓ facing north increments Y[K
[0m[1G   facing south decrements Y[K[75G13/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 13 'facing south decrements Y' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11633.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_facing_east_increments_X ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_facing_east_increments_X 14 14
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_facing_east_increments_X
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109048394000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109048394000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109048
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109048
+ BATS_TEST_START_TIME=1639849109048
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_facing_east_increments_X
[1G ✓ facing south decrements Y[K
[0m[1G   facing east increments X[K[75G14/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 14 'facing east increments X' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11642.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_facing_west_decrements_X ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_facing_west_decrements_X 15 15
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_facing_west_decrements_X
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109155144000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109155144000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109155
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109155
+ BATS_TEST_START_TIME=1639849109155
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_facing_west_decrements_X
[1G ✓ facing east increments X[K
[0m[1G   facing west decrements X[K[75G15/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 15 'facing west decrements X' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11651.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_moving_east_and_north_from_README ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_moving_east_and_north_from_README 16 16
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_moving_east_and_north_from_README
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109260589000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109260589000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109260
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109260
+ BATS_TEST_START_TIME=1639849109260
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_moving_east_and_north_from_README
[1G ✓ facing west decrements X[K
[0m[1G   moving east and north from README[K[75G16/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 16 'moving east and north from README' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11660.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_moving_west_and_north ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_moving_west_and_north 17 17
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_moving_west_and_north
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109362854000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109362854000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109362
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109362
+ BATS_TEST_START_TIME=1639849109362
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_moving_west_and_north
[1G ✓ moving east and north from README[K
[0m[1G   moving west and north[K[75G17/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 17 'moving west and north' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11669.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_moving_west_and_south ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_moving_west_and_south 18 18
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_moving_west_and_south
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109466018000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109466018000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109466
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109466
+ BATS_TEST_START_TIME=1639849109466
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_moving_west_and_south
[1G ✓ moving west and north[K
[0m[1G   moving west and south[K[75G18/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 18 'moving west and south' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11678.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
+ for test_name in "${tests_to_run[@]}"
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n test_moving_east_and_north ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_suite ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ (( ++test_number_in_file ))
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 1 -gt 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test -x /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/robot-simulator.bats test_moving_east_and_north 19 19
++ load bats-extra
++ local file=bats-extra
++ [[ -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ file=/Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ [[ ! -f /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash ]]
++ source /Users/glennjackman_1/src/exercism/exercism.io/ksh/robot-simulator/bats-extra.bash
++ bats_test_function test_at_origin_facing_north
++ local test_name=test_at_origin_facing_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_negative_position_facing_south
++ local test_name=test_at_negative_position_facing_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_at_origin_facing_fish
++ local test_name=test_at_origin_facing_fish
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_east
++ local test_name=test_changes_north_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_south
++ local test_name=test_changes_east_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_west
++ local test_name=test_changes_south_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_north
++ local test_name=test_changes_west_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_north_to_west
++ local test_name=test_changes_north_to_west
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_west_to_south
++ local test_name=test_changes_west_to_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_south_to_east
++ local test_name=test_changes_south_to_east
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_changes_east_to_north
++ local test_name=test_changes_east_to_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_north_increments_Y
++ local test_name=test_facing_north_increments_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_south_decrements_Y
++ local test_name=test_facing_south_decrements_Y
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_east_increments_X
++ local test_name=test_facing_east_increments_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_facing_west_decrements_X
++ local test_name=test_facing_west_decrements_X
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north_from_README
++ local test_name=test_moving_east_and_north_from_README
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_north
++ local test_name=test_moving_west_and_north
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_west_and_south
++ local test_name=test_moving_west_and_south
++ BATS_TEST_NAMES+=("$test_name")
++ bats_test_function test_moving_east_and_north
++ local test_name=test_moving_east_and_north
++ BATS_TEST_NAMES+=("$test_name")
+ bats_perform_test
+ declare -F test_moving_east_and_north
+ BATS_STACK_TRACE=()
+ BATS_CURRENT_STACK_TRACE=()
+ BATS_TEST_COMPLETED=
+ BATS_TEST_SKIPPED=
+ BATS_TEARDOWN_COMPLETED=
+ BATS_ERROR_STATUS=
+ BATS_ERROR_SUFFIX=
+ bats_setup_tracing
+ _BATS_DEBUG_EXCLUDE_PATHS=()
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/lib/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/lib/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ bats_add_debug_exclude_path /usr/local/Cellar/bats-core/1.5.0/libexec/
+ [[ -z /usr/local/Cellar/bats-core/1.5.0/libexec/ ]]
+ [[ darwin21.1.0 == cygwin ]]
+ [[ darwin21.1.0 == msys ]]
+ _BATS_DEBUG_EXCLUDE_PATHS+=("$1")
+ exec
+ [[ 0 -gt 0 ]]
+ IFS=:
+ read -r exclude_paths
+ for path in "${exclude_paths[@]}"
+ [[ -n '' ]]
+ trap 'bats_debug_trap "$BASH_SOURCE"' DEBUG
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_error_trap ERR
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap 'bats_teardown_trap as-exit-trap' EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ get_mills_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ local ms_since_epoch
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++++ local NORMALIZED_INPUT
++++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local output_var=NORMALIZED_INPUT
++++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++++ local file_excluded= path
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++++ file_excluded=1
++++ break
++++ [[ -z 1 ]]
+++ date +%s%N
++ ms_since_epoch=1639849109565729000
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ [[ 1639849109565729000 == *N ]]
++ [[ 19 -lt 19 ]]
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ ms_since_epoch=1639849109565
+++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
+++ local NORMALIZED_INPUT
+++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local output_var=NORMALIZED_INPUT
+++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
+++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
+++ local file_excluded= path
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
+++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
+++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
+++ file_excluded=1
+++ break
+++ [[ -z 1 ]]
++ printf '%d\n' 1639849109565
+ BATS_TEST_START_TIME=1639849109565
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ test_moving_east_and_north
[1G ✓ moving west and south[K
[0m[1G   moving east and north[K[75G19/19[2G++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_teardown_trap ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_error_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/lib/bats-core/tracing.bash
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/lib/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/lib/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_STARTED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ 0 -eq 0 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local line
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local skipped=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEST_TIME=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z '' ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local print_bats_out=
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ NOTSET != NOTSET ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ printf 'ok %d %s%s\n' 19 'moving east and north' ''
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -n '' ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ rm -f /var/folders/qy/s51vl18j4m15ltgsjhqvc9jr0000gr/T//bats-run-QozsZS/bats.11687.out
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-test
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ export status
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_run_teardown_file
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap bats_file_exit_trap EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ local status=0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ teardown_file
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ BATS_TEARDOWN_FILE_COMPLETED=1
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ bats_file_exit_trap
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ trap - ERR EXIT
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ [[ -z 1 ]]
+ [[ -z 1 ]]
++ bats_debug_trap /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core/bats-exec-file
++ local NORMALIZED_INPUT
++ bats_normalize_windows_dir_path NORMALIZED_INPUT /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local output_var=NORMALIZED_INPUT
++ local path=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == ?:* ]]
++ NORMALIZED_INPUT=/usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ printf -v NORMALIZED_INPUT %s /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core
++ local file_excluded= path
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\/* ]]
++ for path in "${_BATS_DEBUG_EXCLUDE_PATHS[@]}"
++ [[ /usr/local/Cellar/bats-core/1.5.0/libexec/bats-core == \/\u\s\r\/\l\o\c\a\l\/\C\e\l\l\a\r\/\b\a\t\s\-\c\o\r\e\/\1\.\5\.\0\/\l\i\b\e\x\e\c\/* ]]
++ file_excluded=1
++ break
++ [[ -z 1 ]]
+ exit 0
[1G ✓ moving east and north[K
[0m[32;1m
19 tests, 0 failures
[0m
