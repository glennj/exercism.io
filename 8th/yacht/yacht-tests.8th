29 tests 
"Yacht" 50 ( [5, 5, 5, 5, 5] "yacht"  play_yacht ) test_eq
"Not Yacht" 0 ( [1, 3, 3, 2, 5] "yacht"  play_yacht ) test_eq
"Ones" 3 ( [1, 1, 1, 3, 5] "ones"  play_yacht ) test_eq
"Ones, out of order" 3 ( [3, 1, 1, 5, 1] "ones"  play_yacht ) test_eq
"No ones" 0 ( [4, 3, 6, 5, 5] "ones"  play_yacht ) test_eq
"Twos" 2 ( [2, 3, 4, 5, 6] "twos"  play_yacht ) test_eq
"Yacht counted as threes" 15 ( [3, 3, 3, 3, 3] "threes"  play_yacht ) test_eq
"Fours" 8 ( [1, 4, 1, 4, 1] "fours"  play_yacht ) test_eq
"Yacht of 3s counted as fives" 0 ( [3, 3, 3, 3, 3] "fives"  play_yacht ) test_eq
"Fives" 10 ( [1, 5, 3, 5, 3] "fives"  play_yacht ) test_eq
"Sixes" 6 ( [2, 3, 4, 5, 6] "sixes"  play_yacht ) test_eq
"Four of a Kind" 24 ( [6, 6, 4, 6, 6] "four of a kind"  play_yacht ) test_eq 
"Yacht can be scored as Four of a Kind" 12 ( [3, 3, 3, 3, 3] "four of a kind"  play_yacht ) test_eq 
"Full house is not Four of a Kind" 0 ( [3, 3, 3, 5, 5] "four of a kind"  play_yacht ) test_eq 
"Little Straight" 30 ( [3, 5, 4, 1, 2] "little straight"  play_yacht ) test_eq 
"Little Straight as Big Straight" 0 ( [1, 2, 3, 4, 5] "big straight"  play_yacht ) test_eq 
"Four in order but not a little straight" 0 ( [1, 1, 2, 3, 4] "little straight"  play_yacht ) test_eq 
"No pairs but not a little straight" 0 ( [1, 2, 3, 4, 6] "little straight"  play_yacht ) test_eq 
"Minimum is 1, maximum is 5, but not a little straight" 0 ( [1, 1, 3, 4, 5] "little straight"  play_yacht ) test_eq 
"Big Straight" 30 ( [4, 6, 2, 5, 3] "big straight"  play_yacht ) test_eq 
"Big Straight as little straight" 0 ( [6, 5, 4, 3, 2] "little straight"  play_yacht ) test_eq 
"No pairs but not a big straight" 0 ( [6, 5, 4, 3, 1] "big straight"  play_yacht ) test_eq 
"Full house two small, three big" 16 ( [2, 2, 4, 4, 4] "full house"  play_yacht ) test_eq 
"Full house three small, two big" 19 ( [5, 3, 3, 5, 3] "full house"  play_yacht ) test_eq 
"Two pair is not a full house" 0 ( [2, 2, 4, 4, 5] "full house"  play_yacht ) test_eq 
"Four of a kind is not a full house" 0 ( [1, 4, 4, 4, 4] "full house"  play_yacht ) test_eq 
"Yacht is not a full house" 0 ( [2, 2, 2, 2, 2] "full house"  play_yacht ) test_eq 
"Choice" 23 ( [3, 3, 5, 6, 6] "choice"  play_yacht ) test_eq
"Yacht as choice" 10 ( [2, 2, 2, 2, 2] "choice"  play_yacht ) test_eq

