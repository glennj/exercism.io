#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source "largest-series-product.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {

    set cases {
        lsp-1.1 "finds the largest product if span equals length" "29" 2 18
        lsp-1.2 "can find the largest product of 2 with numbers in order" "0123456789" 2 72
        lsp-1.3 "can find the largest product of 2" "576802143" 2 48
        lsp-1.4 "can find the largest product of 3 with numbers in order" "0123456789" 3 504
        lsp-1.5 "can find the largest product of 3" "1027839564" 3 270
        lsp-1.6 "can find the largest product of 5 with numbers in order" "0123456789" 5 15120
        lsp-1.7 "can get the largest product of a big number" "73167176531330624919225119674426574742355349194934" 6 23520
        lsp-1.8 "reports zero if the only digits are zero" "0000" 2 0
        lsp-1.9 "reports zero if all spans include zero" "99099" 3 0
        lsp-1.10 "reports 1 for empty string and empty product (0 span)" "" 0 1
        lsp-1.11 "reports 1 for nonempty string and empty product (0 span)" "123" 0 1
    }

    foreach {name description digits span result} $cases {
        test $name $description -body {
            largestSeriesProduct $digits $span
        } -returnCodes ok -result $result
    }


    set errorcases {
        lsp-2.1 "rejects span longer than string length" "123" 4  "span must be smaller than string length"
        lsp-2.2 "rejects empty string and nonzero span" "" 1  "span must be smaller than string length"
        lsp-2.3 "rejects invalid character in digits" "1234a5" 2  "digits input must only contain digits"
        lsp-2.4 "rejects negative span" "12345" -1  "span must be greater than zero"
    }

    foreach {name description digits span result} $errorcases {
        test $name $description -body {
            largestSeriesProduct $digits $span
        } -returnCodes error -result $result
    }

    cleanupTests
}
