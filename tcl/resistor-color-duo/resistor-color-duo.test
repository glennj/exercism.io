#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source "resistor-color-duo.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {

    set cases {
        resistor-color-duo-1.1 {brown black}   10 "Brown and black"
        resistor-color-duo-1.2 {blue grey}     68 "Blue and grey"
        resistor-color-duo-1.3 {yellow violet} 47 "Yellow and violet"
        resistor-color-duo-1.4 {orange orange} 33 "Orange and orange"
        resistor-color-duo-1.5 {green brown orange} 51 "Ignore additional colors"
    }

    foreach {name colors value description} $cases {
        test $name $description -body {
            resistorColor::value {*}$colors
        } -returnCodes ok -result $value
    }

    set errorcases {
        resistor-color-duo-2.1 {foo black} "Invalid first color"
        resistor-color-duo-2.2 {black bar} "Invalid second color"
    }

    foreach {name colors description} $errorcases {
        test $name $description -body {
            resistorColor::value {*}$colors
        } -returnCodes error -match glob -result {Invalid color*}
    }

    cleanupTests
}
