#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

############################################################
source "triangle.tcl"

test triangle-1 "equilateral: all sides are equal" -body {
     triangle::is equilateral {2 2 2} 
} -returnCodes ok -match boolean -result true

skip triangle-2
test triangle-2 "equilateral: any side is unequal" -body {
     triangle::is equilateral {2 3 2} 
} -returnCodes ok -match boolean -result false

skip triangle-3
test triangle-3 "equilateral: no sides are equal" -body {
     triangle::is equilateral {5 4 6} 
} -returnCodes ok -match boolean -result false

skip triangle-4
test triangle-4 "equilateral: all zero sides is not a triangle" -body {
     triangle::is equilateral {0 0 0} 
} -returnCodes ok -match boolean -result false

skip triangle-5
test triangle-5 "equilateral: sides may be floats" -body {
     triangle::is equilateral {0.5 0.5 0.5} 
} -returnCodes ok -match boolean -result true

skip triangle-6
test triangle-6 "isosceles: last two sides are equal" -body {
     triangle::is isosceles {3 4 4} 
} -returnCodes ok -match boolean -result true

skip triangle-7
test triangle-7 "isosceles: first two sides are equal" -body {
     triangle::is isosceles {4 4 3} 
} -returnCodes ok -match boolean -result true

skip triangle-8
test triangle-8 "isosceles: first and last sides are equal" -body {
     triangle::is isosceles {4 3 4} 
} -returnCodes ok -match boolean -result true

skip triangle-9
test triangle-9 "isosceles: equilateral triangles are also isosceles" -body {
     triangle::is isosceles {4 4 4} 
} -returnCodes ok -match boolean -result true

skip triangle-10
test triangle-10 "isosceles: no sides are equal" -body {
     triangle::is isosceles {2 3 4} 
} -returnCodes ok -match boolean -result false

skip triangle-11
test triangle-11 "isosceles: first triangle inequality violation" -body {
     triangle::is isosceles {1 1 3} 
} -returnCodes ok -match boolean -result false

skip triangle-12
test triangle-12 "isosceles: second triangle inequality violation" -body {
     triangle::is isosceles {1 3 1} 
} -returnCodes ok -match boolean -result false

skip triangle-13
test triangle-13 "isosceles: third triangle inequality violation" -body {
     triangle::is isosceles {3 1 1} 
} -returnCodes ok -match boolean -result false

skip triangle-14
test triangle-14 "isosceles: sides may be floats" -body {
     triangle::is isosceles {0.5 0.4 0.5} 
} -returnCodes ok -match boolean -result true 

skip triangle-15
test triangle-15 "scalene: no sides are equal" -body {
     triangle::is scalene {5 4 6} 
} -returnCodes ok -match boolean -result true

skip triangle-16
test triangle-16 "scalene: all sides are equal" -body {
     triangle::is scalene {4 4 4} 
} -returnCodes ok -match boolean -result false

skip triangle-17
test triangle-17 "scalene: two sides are equal" -body {
     triangle::is scalene {4 4 3} 
} -returnCodes ok -match boolean -result false

skip triangle-18
test triangle-18 "scalene: may not violate triangle inequality" -body {
     triangle::is scalene {7 3 2} 
} -returnCodes ok -match boolean -result false

skip triangle-19
test triangle-19 "scalene: sides may be floats" -body {
     triangle::is scalene {0.5 0.4 0.6} 
} -returnCodes ok -match boolean -result true


cleanupTests
