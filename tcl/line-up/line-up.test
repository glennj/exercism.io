#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

# uncomment for more verbose test results
configure -verbose {body error usec}

############################################################
source "line-up.tcl"

test lineup-1 "format smallest non-exceptional ordinal numeral 4" -body {
    formatTicket "Gianna" 4
} -returnCodes ok -result "Gianna, you are the 4th customer we serve today. Thank you!"

skip lineup-2
test lineup-2 "format greatest single digit non-exceptional ordinal numeral 9" -body {
    formatTicket "Maarten" 9
} -returnCodes ok -result "Maarten, you are the 9th customer we serve today. Thank you!"

skip lineup-3
test lineup-3 "format non-exceptional ordinal numeral 5" -body {
    formatTicket "Petronila" 5
} -returnCodes ok -result "Petronila, you are the 5th customer we serve today. Thank you!"

skip lineup-4
test lineup-4 "format non-exceptional ordinal numeral 6" -body {
    formatTicket "Attakullakulla" 6
} -returnCodes ok -result "Attakullakulla, you are the 6th customer we serve today. Thank you!"

skip lineup-5
test lineup-5 "format non-exceptional ordinal numeral 7" -body {
    formatTicket "Kate" 7
} -returnCodes ok -result "Kate, you are the 7th customer we serve today. Thank you!"

skip lineup-6
test lineup-6 "format non-exceptional ordinal numeral 8" -body {
    formatTicket "Maximiliano" 8
} -returnCodes ok -result "Maximiliano, you are the 8th customer we serve today. Thank you!"

skip lineup-7
test lineup-7 "format exceptional ordinal numeral 1" -body {
    formatTicket "Mary" 1
} -returnCodes ok -result "Mary, you are the 1st customer we serve today. Thank you!"

skip lineup-8
test lineup-8 "format exceptional ordinal numeral 2" -body {
    formatTicket "Haruto" 2
} -returnCodes ok -result "Haruto, you are the 2nd customer we serve today. Thank you!"

skip lineup-9
test lineup-9 "format exceptional ordinal numeral 3" -body {
    formatTicket "Henriette" 3
} -returnCodes ok -result "Henriette, you are the 3rd customer we serve today. Thank you!"

skip lineup-10
test lineup-10 "format smallest two digit non-exceptional ordinal numeral 10" -body {
    formatTicket "Alvarez" 10
} -returnCodes ok -result "Alvarez, you are the 10th customer we serve today. Thank you!"

skip lineup-11
test lineup-11 "format non-exceptional ordinal numeral 11" -body {
    formatTicket "Jacqueline" 11
} -returnCodes ok -result "Jacqueline, you are the 11th customer we serve today. Thank you!"

skip lineup-12
test lineup-12 "format non-exceptional ordinal numeral 12" -body {
    formatTicket "Juan" 12
} -returnCodes ok -result "Juan, you are the 12th customer we serve today. Thank you!"

skip lineup-13
test lineup-13 "format non-exceptional ordinal numeral 13" -body {
    formatTicket "Patricia" 13
} -returnCodes ok -result "Patricia, you are the 13th customer we serve today. Thank you!"

skip lineup-14
test lineup-14 "format exceptional ordinal numeral 21" -body {
    formatTicket "Washi" 21
} -returnCodes ok -result "Washi, you are the 21st customer we serve today. Thank you!"

skip lineup-15
test lineup-15 "format exceptional ordinal numeral 62" -body {
    formatTicket "Nayra" 62
} -returnCodes ok -result "Nayra, you are the 62nd customer we serve today. Thank you!"

skip lineup-16
test lineup-16 "format exceptional ordinal numeral 100" -body {
    formatTicket "John" 100
} -returnCodes ok -result "John, you are the 100th customer we serve today. Thank you!"

skip lineup-17
test lineup-17 "format exceptional ordinal numeral 101" -body {
    formatTicket "Zeinab" 101
} -returnCodes ok -result "Zeinab, you are the 101st customer we serve today. Thank you!"

skip lineup-18
test lineup-18 "format non-exceptional ordinal numeral 112" -body {
    formatTicket "Knud" 112
} -returnCodes ok -result "Knud, you are the 112th customer we serve today. Thank you!"

skip lineup-19
test lineup-19 "format exceptional ordinal numeral 123" -body {
    formatTicket "Yma" 123
} -returnCodes ok -result "Yma, you are the 123rd customer we serve today. Thank you!"

cleanupTests
