#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

############################################################
source "matching-brackets.tcl"

# The input string has to be in quotes to avoid mismatched
# braces errors for the Tcl parser. But that means open
# brackets must be escaped to prevent command substitution.

test matching-brackets-1 "paired square brackets" -body {
    bracketsMatch "\[]"
} -returnCodes ok -match boolean -result true

skip matching-brackets-2
test matching-brackets-2 "empty string" -body {
    bracketsMatch ""
} -returnCodes ok -match boolean -result true

skip matching-brackets-3
test matching-brackets-3 "unpaired brackets" -body {
    bracketsMatch "\[\["
} -returnCodes ok -match boolean -result false

skip matching-brackets-4
test matching-brackets-4 "wrong ordered brackets" -body {
    bracketsMatch "\}\{"
    } -returnCodes ok -match boolean -result false

skip matching-brackets-5
test matching-brackets-5 "wrong closing bracket" -body {
    bracketsMatch "\{]"
    } -returnCodes ok -match boolean -result false

skip matching-brackets-6
test matching-brackets-6 "paired with whitespace" -body {
    bracketsMatch "{ }"
} -returnCodes ok -match boolean -result true

skip matching-brackets-7
test matching-brackets-7 "partially paired brackets" -body {
    bracketsMatch "\{\[])"
    } -returnCodes ok -match boolean -result false

skip matching-brackets-8
test matching-brackets-8 "simple nested brackets" -body {
    bracketsMatch "{\[]}"
} -returnCodes ok -match boolean -result true

skip matching-brackets-9
test matching-brackets-9 "several paired brackets" -body {
    bracketsMatch "{}[]"
} -returnCodes ok -match boolean -result true

skip matching-brackets-10
test matching-brackets-10 "paired and nested brackets" -body {
    bracketsMatch "(\[{}({}\[])])"
} -returnCodes ok -match boolean -result true

skip matching-brackets-11
test matching-brackets-11 "unopened closing brackets" -body {
    bracketsMatch "{\[)]\[]}"
} -returnCodes ok -match boolean -result false

skip matching-brackets-12
test matching-brackets-12 "unpaired and nested brackets" -body {
    bracketsMatch "(\[\{])"
} -returnCodes ok -match boolean -result false

skip matching-brackets-13
test matching-brackets-13 "paired and wrong nested brackets" -body {
    bracketsMatch "\[({]})"
} -returnCodes ok -match boolean -result false

skip matching-brackets-14
test matching-brackets-14 "paired and incomplete brackets" -body {
    bracketsMatch "{}\["
} -returnCodes ok -match boolean -result false

skip matching-brackets-15
test matching-brackets-15 "too many closing brackets" -body {
    bracketsMatch "\[]]"
} -returnCodes ok -match boolean -result false

skip matching-brackets-16
test matching-brackets-16 "math expression" -body {
    bracketsMatch "(((185 + 223.85) * 15) - 543)/2"
} -returnCodes ok -match boolean -result true

skip matching-brackets-17
test matching-brackets-17 "complex latex expression" -body {
    bracketsMatch "\\left(\\begin{array}{cc} \\frac{1}{3} & x\\\\ \\mathrm{e}^{x} &... x^2 \\end{array}\\right)"
} -returnCodes ok -match boolean -result true


cleanupTests
