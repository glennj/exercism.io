#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source "roman-numerals.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {

    set cases {
        roman-1 "1 is a single I" 1 "I"
        roman-2 "2 is two I's" 2 "II"
        roman-3 "3 is three I's" 3 "III"
        roman-4 "4, being 5 - 1, is IV" 4 "IV"
        roman-5 "5 is a single V" 5 "V"
        roman-6 "6, being 5 + 1, is VI" 6 "VI"
        roman-7 "9, being 10 - 1, is IX" 9 "IX"
        roman-8 "20 is two X's" 27 "XXVII"
        roman-9 "48 is not 50 - 2 but rather 40 + 8" 48 "XLVIII"
        roman-10 "49 is not 40 + 5 + 4 but rather 50 - 10 + 10 - 1" 49 "XLIX"
        roman-11 "50 is a single L" 59 "LIX"
        roman-12 "90, being 100 - 10, is XC" 93 "XCIII"
        roman-13 "100 is a single C" 141 "CXLI"
        roman-14 "60, being 50 + 10, is LX" 163 "CLXIII"
        roman-15 "400, being 500 - 100, is CD" 402 "CDII"
        roman-16 "500 is a single D" 575 "DLXXV"
        roman-17 "900, being 1000 - 100, is CM" 911 "CMXI"
        roman-18 "1000 is a single M" 1024 "MXXIV"
        roman-19 "1888 uses all digits" 1888 "MDCCCLXXXVIII"
        roman-20 "3000 is three M's" 3000 "MMM"
    }

    foreach {name description decimal roman} $cases {
        test $name $description -body "
            toroman $decimal
        " -returnCodes ok -result $roman
    }

    cleanupTests
}
