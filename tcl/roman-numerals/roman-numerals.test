#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

############################################################
source "roman-numerals.tcl"

test roman-1 "1 is a single I" -body {
    toroman 1
} -returnCodes ok -result "I"

skip roman-2
test roman-2 "2 is two I's" -body {
    toroman 2
} -returnCodes ok -result "II"

skip roman-3
test roman-3 "3 is three I's" -body {
    toroman 3
} -returnCodes ok -result "III"

skip roman-4
test roman-4 "4, being 5 - 1, is IV" -body {
    toroman 4
} -returnCodes ok -result "IV"

skip roman-5
test roman-5 "5 is a single V" -body {
    toroman 5
} -returnCodes ok -result "V"

skip roman-6
test roman-6 "6, being 5 + 1, is VI" -body {
    toroman 6
} -returnCodes ok -result "VI"

skip roman-7
test roman-7 "9, being 10 - 1, is IX" -body {
    toroman 9
} -returnCodes ok -result "IX"

skip roman-8
test roman-8 "20 is two X's" -body {
    toroman 27
} -returnCodes ok -result "XXVII"

skip roman-9
test roman-9 "48 is not 50 - 2 but rather 40 + 8" -body {
    toroman 48
} -returnCodes ok -result "XLVIII"

skip roman-10
test roman-10 "49 is not 40 + 5 + 4 but rather 50 - 10 + 10 - 1" -body {
    toroman 49
} -returnCodes ok -result "XLIX"

skip roman-11
test roman-11 "50 is a single L" -body {
    toroman 59
} -returnCodes ok -result "LIX"

skip roman-12
test roman-12 "90, being 100 - 10, is XC" -body {
    toroman 93
} -returnCodes ok -result "XCIII"

skip roman-13
test roman-13 "100 is a single C" -body {
    toroman 141
} -returnCodes ok -result "CXLI"

skip roman-14
test roman-14 "60, being 50 + 10, is LX" -body {
    toroman 163
} -returnCodes ok -result "CLXIII"

skip roman-15
test roman-15 "400, being 500 - 100, is CD" -body {
    toroman 402
} -returnCodes ok -result "CDII"

skip roman-16
test roman-16 "500 is a single D" -body {
    toroman 575
} -returnCodes ok -result "DLXXV"

skip roman-17
test roman-17 "900, being 1000 - 100, is CM" -body {
    toroman 911
} -returnCodes ok -result "CMXI"

skip roman-18
test roman-18 "1000 is a single M" -body {
    toroman 1024
} -returnCodes ok -result "MXXIV"

skip roman-19
test roman-19 "1888 uses all digits" -body {
    toroman 1888
} -returnCodes ok -result "MDCCCLXXXVIII"

skip roman-20
test roman-20 "3000 is three M's" -body {
    toroman 3000
} -returnCodes ok -result "MMM"


cleanupTests
