#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source testHelpers.tcl

# uncomment for more verbose test results
#configure -verbose {body error usec}

############################################################
source "accumulate.tcl"

test accumulate-1 "empty list" -body {
    accumulate n {} { expr {$n * $n} }
} -returnCodes ok -result {}

skip accumulate-2
test accumulate-2 "squares" -body {
    accumulate n {1 2 3 4} {expr {$n * $n}}
} -returnCodes ok -result {1 4 9 16}

skip accumulate-3
test accumulate-3 "upper case" -body {
    accumulate word {hello world} {string toupper $word}
} -returnCodes ok -result {HELLO WORLD}

skip accumulate-4
test accumulate-4 "divmod" -setup {
    proc divmod {num div} {
        return [list [expr {$num / $div}] [expr {$num % $div}]]
    }
} -body {
    accumulate n {10 17 23} {divmod $n 7}
} -returnCodes ok -result {{1 3} {2 3} {3 2}}

skip accumulate-5
test accumulate-5 "composition" -setup {
    proc divmod {num div} {
        return [list [expr {$num / $div}] [expr {$num % $div}]]
    }
} -body {
    accumulate pair [accumulate n {10 17 23} {divmod $n 7}] {
        lassign $pair quotient remainder
        expr {7 * $quotient + $remainder}
    }
} -returnCodes ok -result {10 17 23} 

skip accumulate-6
test accumulate-6 "accumulate recursively" -body {
    accumulate char {a b c} {
        accumulate digit {1 2 3} {
            string cat $char $digit
        }
    }
} -returnCodes ok -result {{a1 a2 a3} {b1 b2 b3} {c1 c2 c3}}

skip accumulate-8
test accumulate-8 "prefix of list" -body {
    accumulate n {7 6 5 4 3 2 1} {
        if {$n == 3} {
            break
        } else {
            set n
        }
    }
} -returnCodes ok -result {7 6 5 4}

skip accumulate-7
test accumulate-7 "filter" -body {
    accumulate n {1 2 3 4 5 6 7} {expr {$n % 2 == 0 ? $n : [continue]}}
} -returnCodes ok -result {2 4 6}

skip accumulate-9
test accumulate-9 "does not modify original list" -body {
    set original {1 2 3}
    set accumulated [accumulate n $original {incr n}]
    list $accumulated $original
} -returnCodes ok -result {{2 3 4} {1 2 3}}

cleanupTests
