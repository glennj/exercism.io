#!/usr/bin/env tclsh
package require tcltest
namespace import ::tcltest::*
source "pangram.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {

    set cases {
        pangram-1 ""                                                            0 "empty sentence"
        pangram-2 "abcdefghijklmnopqrstuvwxyz"                                  1 "perfect lower case"
        pangram-3 "the quick brown fox jumps over the lazy dog"                 1 "only lower case"
        pangram-4 "a quick movement of the enemy will jeopardize five gunboats" 0 "missing the letter 'x'"
        pangram-5 "five boxing wizards jump quickly at it"                      0 "missing the letter 'h'"
        pangram-6 "the_quick_brown_fox_jumps_over_the_lazy_dog"                 1 "with underscores"
        pangram-7 "the 1 quick brown fox jumps over the 2 lazy dogs"            1 "with numbers"
        pangram-8 "7h3 qu1ck brown fox jumps ov3r 7h3 lazy dog"                 0 "missing letters replaced by numbers"
        pangram-9 "\"Five quacking Zephyrs jolt my wax bed.\""                  1 "mixed case and punctuation"
        pangram-10 "the quick brown fox jumps over with lazy FX"                0 "case insensitive"
    }

    foreach {name input result description} $cases {
        test $name $description -body {
            isPangram $input
        } -result $result
    }

    cleanupTests
}
