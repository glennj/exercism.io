#!/usr/bin/env tclsh
set version 1.7.0
package require tcltest
namespace import ::tcltest::*
source "acronym.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {

    set cases {
        acronym-1 "basic"                          PNG             "Portable Network Graphics"
        acronym-2 "lowercase words"                ROR             "Ruby on Rails"
        acronym-3 "punctuation"                    FIFO            "First In, First Out"
        acronym-4 "all caps word"                  GIMP            "GNU Image Manipulation Program"
        acronym-5 "punctuation without whitespace" CMOS            "Complementary metal-oxide semiconductor"
        acronym-6 "very long abbreviation"         ROTFLSHTMDCOALM "Rolling On The Floor Laughing So Hard That My Dogs Came Over And Licked Me"
        acronym-7 "consecutive delimiters"         SIMUFTA         "Something - I made up from thin air"
        acronym-8 "apostrophes"                    HC              "Halley's Comet"
        acronym-9 "underscore emphasis"            TRNT            "The Road _Not_ Taken"
    }

    foreach {name description output input} $cases {
        test $name $description -body {
            abbreviate $input
        } -returnCodes ok -result $output
    }

    cleanupTests
}
