#!/usr/bin/env tclsh
set version 1.1.0
package require tcltest
namespace import ::tcltest::*
source "sublist.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

if {$::argv0 eq [info script]} {
    set cases {
        sublist-1 "empty lists" {} {} "equal"
        sublist-2 "empty list within non empty list" {} {1 2 3} "sublist"
        sublist-3 "non empty list contains empty list" {1 2 3} {} "superlist"
        sublist-4 "list equals itself" {1 2 3} {1 2 3} "equal"
        sublist-5 "different lists" {1 2 3} {2 3 4} "unequal"
        sublist-6 "false start" {1 2 5} {0 1 2 3 1 2 5 6} "sublist"
        sublist-7 "consecutive" {1 1 2} {0 1 1 1 2 1 2} "sublist"
        sublist-8 "sublist at start" {0 1 2} {0 1 2 3 4 5} "sublist"
        sublist-9 "sublist in middle" {2 3 4} {0 1 2 3 4 5} "sublist"
        sublist-10 "sublist at end" {3 4 5} {0 1 2 3 4 5} "sublist"
        sublist-11 "at start of superlist" {0 1 2 3 4 5} {0 1 2} "superlist"
        sublist-12 "in middle of superlist" {0 1 2 3 4 5} {2 3} "superlist"
        sublist-13 "at end of superlist" {0 1 2 3 4 5} {3 4 5} "superlist"
        sublist-14 "first list missing element from second list" {1 3} {1 2 3} "unequal"
        sublist-15 "second list missing element from first list" {1 2 3} {1 3} "unequal"
        sublist-16 "order matters to a list" {1 2 3} {3 2 1} "unequal"
        sublist-17 "same digits but different numbers" {1 0 1} {10 1} "unequal"
    }

    foreach {name description list1 list2 result} $cases {
        test $name $description \
            -body [list sublist $list1 $list2] \
            -result $result
    }

    cleanupTests
}
