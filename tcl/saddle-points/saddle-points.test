#!/usr/bin/env tclsh
set version 1.5.0
package require tcltest
namespace import ::tcltest::*
source "saddle-points.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

# two lists have the same elements, in no particular order
customMatch list unorderedListMatch
proc unorderedListMatch {expected actual} {
    if {[llength $expected] != [llength $actual]} {
        return false
    }
    foreach elem $expected {
        if {[lsearch -exact $actual $elem] == -1} {
            return false
        }
    }
    return true
}


if {$::argv0 eq [info script]} {

    set cases {
        sp-1 "Can identify single saddle point" 
        { {9 8 7}
          {5 3 2}
          {6 6 7} } 
        {{2 1}}

        sp-2 "Can identify that empty matrix has no saddle points"
        { {} }
        {}

        sp-3 "Can identify lack of saddle points when there are none"
        { {1 2 3}
          {3 1 2}
          {2 3 1} }
        {}

        sp-4 "Can identify multiple saddle points in a column"
        { {4 5 4}
          {3 5 5}
          {1 5 4} }
        {{1 2} {2 2} {3 2}}

        sp-5 "Can identify multiple saddle points in a row"
        { {6 7 8}
          {5 5 5}
          {7 5 6} }
        {{2 1} {2 2} {2 3}}

        sp-6 "Can identify saddle point in bottom right corner"
        { {8 7 9}
          {6 7 6}
          {3 2 5} }
        {{3 3}}

        sp-7 "Can identify saddle points in a non square matrix"
        { {3 1 3}
          {3 2 4} }
        {{1 3} {1 1}}

        sp-8 "Can identify that saddle points in a single column matrix are those with the minimum value"
        { {2}
          {1}
          {4}
          {1} }
        {{2 1} {4 1}}

        sp-9 "Can identify that saddle points in a single row matrix are those with the maximum value"
        { {2 5 3 5} }
        {{1 2} {1 4}}
    }

    foreach {name description matrix points} $cases {
        test $name $description -body {
            saddlePoints $matrix
        } -returnCodes ok -match list -result $points
    }

    cleanupTests
}
