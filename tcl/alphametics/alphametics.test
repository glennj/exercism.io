#!/usr/bin/env tclsh
set version 1.3.0
package require tcltest
namespace import ::tcltest::*
source "alphametics.tcl"

proc fail_fast {} {
    return [expr {
        ![info exists ::env(RUN_ALL)]
        || [string is boolean -strict $::env(RUN_ALL)]
        && !$::env(RUN_ALL)
    }]
}

proc failed {} {
    return [expr {$::tcltest::numTests(Failed) > 0}]
}

if {[fail_fast]} {
    proc test args {
        if {[failed]} {::tcltest::configure -skip *}
        uplevel [list ::tcltest::test {*}$args]
    }
}

proc cleanupTests {} {
    set failed [failed]
    uplevel 1 ::tcltest::cleanupTests
    if {$failed} {exit 1}
}

proc dictionaryMatch {expected actual} {
    if {[dict size $expected] != [dict size $actual]} {
        return false
    }
    dict for {key value} $expected {
        if {![dict exists $actual $key]} {
            return false
        }
        if {[dict get $actual $key] != $value} {
            return false
        }
    }
    return true
}
customMatch dictionary dictionaryMatch

if {$::argv0 eq [info script]} {

    set cases {
        alphametics-1 "puzzle with three letters"
            "I + BB == ILL"
            { I 1 B 9 L 0 }
        alphametics-2 "solution must have unique value for each letter"
            "A == B"
            {}
        alphametics-3 "leading zero solution is invalid"
            "ACA + DD == BD"
            {}
        alphametics-4 "puzzle with two digits final carry"
            "A + A + A + A + A + A + A + A + A + A + A + B == BCC"
            { A 9 B 1 C 0 }
        alphametics-5 "puzzle with four letters"
            "AS + A == MOM"
            { A 9 S 2 M 1 O 0 }
        alphametics-6 "puzzle with six letters"
            "NO + NO + TOO == LATE"
            { N 7 O 4 T 9 L 1 A 0 E 2 }
        alphametics-7 "puzzle with seven letters"
            "HE + SEES + THE == LIGHT"
            { E 4 G 2 H 5 I 0 L 1 S 9 T 7 }
        alphametics-8 "puzzle with eight letters"
            "SEND + MORE == MONEY"
            { S 9 E 5 N 6 D 7 M 1 O 0 R 8 Y 2 }
        alphametics-9 "puzzle with ten letters"
            "AND + A + STRONG + OFFENSE + AS + A + GOOD == DEFENSE"
            { A 5 D 3 E 4 F 7 G 8 N 0 O 2 R 1 S 6 T 9 }
        alphametics-10 "puzzle with ten letters and 199 addends"
            "THIS + A + FIRE + THEREFORE + FOR + ALL + HISTORIES + I + TELL + A + TALE + THAT + FALSIFIES + ITS + TITLE + TIS + A + LIE + THE + TALE + OF + THE + LAST + FIRE + HORSES + LATE + AFTER + THE + FIRST + FATHERS + FORESEE + THE + HORRORS + THE + LAST + FREE + TROLL + TERRIFIES + THE + HORSES + OF + FIRE + THE + TROLL + RESTS + AT + THE + HOLE + OF + LOSSES + IT + IS + THERE + THAT + SHE + STORES + ROLES + OF + LEATHERS + AFTER + SHE + SATISFIES + HER + HATE + OFF + THOSE + FEARS + A + TASTE + RISES + AS + SHE + HEARS + THE + LEAST + FAR + HORSE + THOSE + FAST + HORSES + THAT + FIRST + HEAR + THE + TROLL + FLEE + OFF + TO + THE + FOREST + THE + HORSES + THAT + ALERTS + RAISE + THE + STARES + OF + THE + OTHERS + AS + THE + TROLL + ASSAILS + AT + THE + TOTAL + SHIFT + HER + TEETH + TEAR + HOOF + OFF + TORSO + AS + THE + LAST + HORSE + FORFEITS + ITS + LIFE + THE + FIRST + FATHERS + HEAR + OF + THE + HORRORS + THEIR + FEARS + THAT + THE + FIRES + FOR + THEIR + FEASTS + ARREST + AS + THE + FIRST + FATHERS + RESETTLE + THE + LAST + OF + THE + FIRE + HORSES + THE + LAST + TROLL + HARASSES + THE + FOREST + HEART + FREE + AT + LAST + OF + THE + LAST + TROLL + ALL + OFFER + THEIR + FIRE + HEAT + TO + THE + ASSISTERS + FAR + OFF + THE + TROLL + FASTS + ITS + LIFE + SHORTER + AS + STARS + RISE + THE + HORSES + REST + SAFE + AFTER + ALL + SHARE + HOT + FISH + AS + THEIR + AFFILIATES + TAILOR + A + ROOFS + FOR + THEIR + SAFE == FORTRESSES"
            { A 1 E 0 F 5 H 8 I 7 L 2 O 6 R 3 S 4 T 9 }
    }

    foreach {name description puzzle result} $cases {
        test $name $description -body {
            solve $puzzle
        } -returnCodes ok -match dictionary -result $result
    }

    cleanupTests
}
