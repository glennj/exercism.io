function is_empty with list do
  for each _ in list do
    return false
  end
  return true
end

// Return a copy of the list with the element at the given index removed.
function remove_at with list, idx do
  set result to []
  for each elem in list indexed by i do
    if i != idx do
      change result to push(result, list[i])
    end
  end
  return result
end

// ------------------------------------------------------------
set screen_size to 100

set ball to new Ball()
set radius to 3

set blocks to []
set block_width to 16
set block_height to 7
set block_top to 31
set block_left to 8
set gap to 1

repeat 5 times do
  change blocks to push(blocks, new Block(block_left, block_top))
  change block_left to block_left + block_width + gap
end

set next_x to 0
set next_y to 0
set smashed to false

repeat_forever do
  change smashed to false
  if ball.cy - radius == block_top + block_height do
    for each block in blocks indexed by i do
      if block.left <= ball.cx and ball.cx <= block.left + block_width do
        // hit!
        change smashed to true
        change block.smashed to true
        change blocks to remove_at(blocks, i)
        break
      end
    end

    if is_empty(blocks) do
      // game over
      break
    end
  end

  change next_x to ball.cx + ball.x_velocity
  change next_y to ball.cy + ball.y_velocity

  if next_x - radius < 0 or next_x + radius > screen_size do
    change ball.x_velocity to -ball.x_velocity
  end
  if smashed or next_y - radius < 0 or next_y + radius > screen_size do
    change ball.y_velocity to -ball.y_velocity
  end

  move_ball(ball)
end
