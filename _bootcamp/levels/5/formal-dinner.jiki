// Return the index of the *first* occurrence of the given char 
// in the given string.
// Return -1 if the char does not exist in the string.
function index_of with string, char do
  set index to 0

  for each character in string do
    change index to index + 1
    if character is char do
      return index
    end
  end

  return -1
end

// Remove the first n chars from the string.
function drop with string, n do
  set remaining to ""
  set i to 0
  
  for each char in string do
    change i to i + 1
    if i > n do
      change remaining to join(remaining, char)
    end
  end
  
  return remaining
end

// String or list length
function length with thing do
  set len to 0
  
  for each _ in thing do
    change len to len + 1
  end
  
  return len
end

// Does the given string end with the given suffix
function ends_with with string, suffix do
  set string_len to length(string)
  set suffix_len to length(suffix)
  if string_len < suffix_len do
    return false
  end

  set i to string_len + 1
  set j to suffix_len + 1
  
  repeat suffix_len times do
    change i to i - 1
    change j to j - 1
    if not (string[i] is suffix[j]) do
      return false
    end
  end

  return true
end

function on_guest_list with guests, candidate do
  // The honorific is the *first* space-separated word in the candidate string.
  // Remove it to acquire the candidate's surname.
  set surname to candidate
  set idx to index_of(candidate, " ")
  if idx != -1 do
    change surname to drop(candidate, idx)
  end
  
  for each guest in guests do
    log [guest, surname]
    if ends_with(guest, surname) do
      return true
    end
  end
  
  return false
end

// log index_of("Mr Pitt", " ") // 3
// log string_drop("Mr Pitt", 3) // "Pitt"
// log length("Mr Pitt") // 7
// log ends_with("Mr Pitt", "Pit") // false
// log ends_with("Mr Pitt", "Pitt") // true
