function build_url with description do
  set words to my#tokenize(description)
  set year to words[4]
  set klass to concatenate("class-", words[2])
  
  set root to "https://api.school.com"
  set version to "v4"
  if my#cmp_string(year, "2025") == -1 do
    change version to "v3"
  end

  return my#join([root, version, "grades", year, klass], "/")
end

function grades_to_pattern with description do
  set url to build_url(description)
  set response to fetch(url, {})

  return {
    "teacher": teacher_name(response["data"]["teacher"]),
    "grades": patternize(response["data"]["grades"])
  }
end

function teacher_name with name_with_honorific do
  // honorific is the first space-separated word
  set names to my#drop(my#tokenize(name_with_honorific), 1)
  for each name in names indexed by i do
    change names[i] to my#capitalize(name)
  end
  return my#join(names, " ")
end

function patternize with list_of_strings do
  //set sorted to my#sort_list_of_strings(list_of_strings)
  set sorted to my#bubble_sort_string(list_of_strings)
  set result to my#join(sorted, "")
  return result
end
