import.version:2.0.1 {unitt}!
import {src/yacht}!

suite "Yacht" [
    test "Yacht" [
        result: yacht [5, 5, 5, 5, 5] "yacht" 
        assert -> 50 = result
    ]

    test "Not Yacht" [
        result: yacht [1, 3, 3, 2, 5] "yacht" 
        assert -> 0 = result
    ]

    test "Ones" [
        result: yacht [1, 1, 1, 3, 5] "ones" 
        assert -> 3 = result
    ]

    test "Ones, out of order" [
        result: yacht [3, 1, 1, 5, 1] "ones" 
        assert -> 3 = result
    ]

    test "No ones" [
        result: yacht [4, 3, 6, 5, 5] "ones" 
        assert -> 0 = result
    ]

    test "Twos" [
        result: yacht [2, 3, 4, 5, 6] "twos" 
        assert -> 2 = result
    ]

    test "Yacht counted as threes" [
        result: yacht [3, 3, 3, 3, 3] "threes" 
        assert -> 15 = result
    ]

    test "Fours" [
        result: yacht [1, 4, 1, 4, 1] "fours" 
        assert -> 8 = result
    ]

    test "Yacht of 3s counted as fives" [
        result: yacht [3, 3, 3, 3, 3] "fives" 
        assert -> 0 = result
    ]

    test "Fives" [
        result: yacht [1, 5, 3, 5, 3] "fives" 
        assert -> 10 = result
    ]

    test "Sixes" [
        result: yacht [2, 3, 4, 5, 6] "sixes" 
        assert -> 6 = result
    ]

    test "Four of a Kind" [
        result: yacht [6, 6, 4, 6, 6] "four of a kind" 
        assert -> 24 = result
    ]

    test "Yacht can be scored as Four of a Kind" [
        result: yacht [3, 3, 3, 3, 3] "four of a kind" 
        assert -> 12 = result
    ]

    test "Full house is not Four of a Kind" [
        result: yacht [3, 3, 3, 5, 5] "four of a kind" 
        assert -> 0 = result
    ]

    test "Little Straight" [
        result: yacht [3, 5, 4, 1, 2] "little straight" 
        assert -> 30 = result
    ]

    test "Little Straight as Big Straight" [
        result: yacht [1, 2, 3, 4, 5] "big straight" 
        assert -> 0 = result
    ]

    test "Four in order but not a little straight" [
        result: yacht [1, 1, 2, 3, 4] "little straight" 
        assert -> 0 = result
    ]

    test "No pairs but not a little straight" [
        result: yacht [1, 2, 3, 4, 6] "little straight" 
        assert -> 0 = result
    ]

    test "Minimum is 1, maximum is 5, but not a little straight" [
        result: yacht [1, 1, 3, 4, 5] "little straight" 
        assert -> 0 = result
    ]

    test "Big Straight" [
        result: yacht [4, 6, 2, 5, 3] "big straight" 
        assert -> 30 = result
    ]

    test "Big Straight as little straight" [
        result: yacht [6, 5, 4, 3, 2] "little straight" 
        assert -> 0 = result
    ]

    test "No pairs but not a big straight" [
        result: yacht [6, 5, 4, 3, 1] "big straight" 
        assert -> 0 = result
    ]

    test "Full house two small, three big" [
        result: yacht [2, 2, 4, 4, 4] "full house" 
        assert -> 16 = result
    ]

    test "Full house three small, two big" [
        result: yacht [5, 3, 3, 5, 3] "full house" 
        assert -> 19 = result
    ]

    test "Two pair is not a full house" [
        result: yacht [2, 2, 4, 4, 5] "full house" 
        assert -> 0 = result
    ]

    test "Four of a kind is not a full house" [
        result: yacht [1, 4, 4, 4, 4] "full house" 
        assert -> 0 = result
    ]

    test "Yacht is not a full house" [
        result: yacht [2, 2, 2, 2, 2] "full house" 
        assert -> 0 = result
    ]

    test "Choice" [
        result: yacht [3, 3, 5, 6, 6] "choice" 
        assert -> 23 = result
    ]

    test "Yacht as choice" [
        result: yacht [2, 2, 2, 2, 2] "choice" 
        assert -> 10 = result
    ]
]
