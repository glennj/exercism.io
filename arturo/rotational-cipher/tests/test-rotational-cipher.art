import.version:3.0.0 {unitt}! 
import {src/rotational-cipher}!

describe "Rotational Cipher" [
    it "rotate a by 0, same output as input" [
        expects.be:'equal? @[
            "a"
            rotateText "a" 0
        ]
    ]

    it "rotate a by 1" [
        expects.be:'equal? @[
            "b"
            rotateText "a" 1
        ]
    ]

    it "rotate a by 26, same output as input" [
        expects.be:'equal? @[
            "a"
            rotateText "a" 26
        ]
    ]

    it "rotate m by 13" [
        expects.be:'equal? @[
            "z"
            rotateText "m" 13
        ]
    ]

    it "rotate n by 13 with wrap around alphabet" [
        expects.be:'equal? @[
            "a"
            rotateText "n" 13
        ]
    ]

    it "rotate capital letters" [
        expects.be:'equal? @[
            "TRL"
            rotateText "OMG" 5
        ]
    ]

    it "rotate spaces" [
        expects.be:'equal? @[
            "T R L"
            rotateText "O M G" 5
        ]
    ]

    it "rotate numbers" [
        expects.be:'equal? @[
            "Xiwxmrk 1 2 3 xiwxmrk"
            rotateText "Testing 1 2 3 testing" 4
        ]
    ]

    it "rotate punctuation" [
        expects.be:'equal? @[
            "Gzo'n zvo, Bmviyhv!"
            rotateText "Let's eat, Grandma!" 21
        ]
    ]

    it "rotate all letters" [
        expects.be:'equal? @[
            "Gur dhvpx oebja sbk whzcf bire gur ynml qbt."
            rotateText "The quick brown fox jumps over the lazy dog." 13
        ]
    ]
]
