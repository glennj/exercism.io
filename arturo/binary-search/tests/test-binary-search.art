import.version:3.0.0 {unitt}! 
import {src/binary-search}!

describe "Binary Search" [
    it "finds a value in a block with one element" [
        vals: [6]
        expects.be:'equal? @[0 find vals 6]
    ]

    it "finds a value in the middle of a block" [
        vals: [1 3 4 6 8 9 11]
        expects.be:'equal? @[3 find vals 6]
    ]

    it "finds a value at the beginning of a block" [
        vals: [1 3 4 6 8 9 11]
        expects.be:'equal? @[0 find vals 1]
    ]

    it "finds a value at the end of a block" [
        vals: [1 3 4 6 8 9 11]
        expects.be:'equal? @[6 find vals 11]
    ]

    it "finds a value in a block of odd length" [
        vals: [1 3 5 8 13 21 34 55 89 144 233 377 634]
        expects.be:'equal? @[9 find vals 144]
    ]

    it "finds a value in a block of even length" [
        vals: [1 3 5 8 13 21 34 55 89 144 233 377]
        expects.be:'equal? @[5 find vals 21]
    ]

    it "identifies that a value is not included in the block" [
        expects.be:'null? [find [1 3 4 6 8 9 11] 7]
    ]

    it "a value smaller than the block's smallest value is not found" [
        expects.be:'null? [find [1 3 4 6 8 9 11] 0]
    ]

    it "a value larger than the block's largest value is not found" [
        expects.be:'null? [find [1 3 4 6 8 9 11] 13]
    ]

    it "nothing is found in an empty block" [
        expects.be:'null? [find [] 1]
    ]

    it "nothing is found when the left and right bounds cross" [
        expects.be:'null? [find [1 2] 0]
    ]
]

