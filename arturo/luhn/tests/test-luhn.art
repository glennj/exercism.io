import.version:2.0.1 {unitt}!
import {src/luhn}!

suite "Luhn" [
    test "single digit strings can not be valid" [
        result: luhn? "1"
        assert -> false = result
    ]

    test "a single zero is invalid" [
        result: luhn? "0"
        assert -> false = result
    ]

    test "a simple valid SIN that remains valid if reversed" [
        result: luhn? "059"
        assert -> true = result
    ]

    test "a simple valid SIN that becomes invalid if reversed" [
        result: luhn? "59"
        assert -> true = result
    ]

    test "a valid Canadian SIN" [
        result: luhn? "055 444 285"
        assert -> true = result
    ]

    test "invalid Canadian SIN" [
        result: luhn? "055 444 286"
        assert -> false = result
    ]

    test "invalid credit card" [
        result: luhn? "8273 1232 7352 0569"
        assert -> false = result
    ]

    test "invalid long number with an even remainder" [
        result: luhn? "1 2345 6789 1234 5678 9012"
        assert -> false = result
    ]

    test "invalid long number with a remainder divisible by 5" [
        result: luhn? "1 2345 6789 1234 5678 9013"
        assert -> false = result
    ]

    test "valid number with an even number of digits" [
        result: luhn? "095 245 88"
        assert -> true = result
    ]

    test "valid number with an odd number of spaces" [
        result: luhn? "234 567 891 234"
        assert -> true = result
    ]

    test "valid strings with a non-digit added at the end become invalid" [
        result: luhn? "059a"
        assert -> false = result
    ]

    test "valid strings with punctuation included become invalid" [
        result: luhn? "055-444-285"
        assert -> false = result
    ]

    test "valid strings with symbols included become invalid" [
        result: luhn? "055# 444$ 285"
        assert -> false = result
    ]

    test "single zero with space is invalid" [
        result: luhn? " 0"
        assert -> false = result
    ]

    test "more than a single zero is valid" [
        result: luhn? "0000 0"
        assert -> true = result
    ]

    test "input digit 9 is correctly converted to output digit 9" [
        result: luhn? "091"
        assert -> true = result
    ]

    test "very long input is valid" [
        result: luhn? "9999999999 9999999999 9999999999 9999999999"
        assert -> true = result
    ]

    test "valid luhn with an odd number of digits and non zero first digit" [
        result: luhn? "109"
        assert -> true = result
    ]

    test "using ascii value for non-doubled non-digit isn't allowed" [
        result: luhn? "055b 444 285"
        assert -> false = result
    ]

    test "using ascii value for doubled non-digit isn't allowed" [
        result: luhn? ":9"
        assert -> false = result
    ]

    test "non-numeric, non-space char in the middle with a sum that's divisible by 10 isn't allowed" [
        result: luhn? "59%59"
        assert -> false = result
    ]
]
