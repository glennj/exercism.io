import.version:3.0.0 {unitt}! 
import {src/luhn}!

describe "Luhn" [
    it "single digit strings can not be valid" [
        expects.be:'false? @[luhn? "1"]
    ]

    it "a single zero is invalid" [
        expects.be:'false? @[luhn? "0"]
    ]

    it "a simple valid SIN that remains valid if reversed" [
        expects.be:'true? @[luhn? "059"]
    ]

    it "a simple valid SIN that becomes invalid if reversed" [
        expects.be:'true? @[luhn? "59"]
    ]

    it "a valid Canadian SIN" [
        expects.be:'true? @[luhn? "055 444 285"]
    ]

    it "invalid Canadian SIN" [
        expects.be:'false? @[luhn? "055 444 286"]
    ]

    it "invalid credit card" [
        expects.be:'false? @[luhn? "8273 1232 7352 0569"]
    ]

    it "invalid long number with an even remainder" [
        expects.be:'false? @[luhn? "1 2345 6789 1234 5678 9012"]
    ]

    it "invalid long number with a remainder divisible by 5" [
        expects.be:'false? @[luhn? "1 2345 6789 1234 5678 9013"]
    ]

    it "valid number with an even number of digits" [
        expects.be:'true? @[luhn? "095 245 88"]
    ]

    it "valid number with an odd number of spaces" [
        expects.be:'true? @[luhn? "234 567 891 234"]
    ]

    it "valid strings with a non-digit added at the end become invalid" [
        expects.be:'false? @[luhn? "059a"]
    ]

    it "valid strings with punctuation included become invalid" [
        expects.be:'false? @[luhn? "055-444-285"]
    ]

    it "valid strings with symbols included become invalid" [
        expects.be:'false? @[luhn? "055# 444$ 285"]
    ]

    it "single zero with space is invalid" [
        expects.be:'false? @[luhn? " 0"]
    ]

    it "more than a single zero is valid" [
        expects.be:'true? @[luhn? "0000 0"]
    ]

    it "input digit 9 is correctly converted to output digit 9" [
        expects.be:'true? @[luhn? "091"]
    ]

    it "very long input is valid" [
        expects.be:'true? @[luhn? "9999999999 9999999999 9999999999 9999999999"]
    ]

    it "valid luhn with an odd number of digits and non zero first digit" [
        expects.be:'true? @[luhn? "109"]
    ]

    it "using ascii value for non-doubled non-digit isn't allowed" [
        expects.be:'false? @[luhn? "055b 444 285"]
    ]

    it "using ascii value for doubled non-digit isn't allowed" [
        expects.be:'false? @[luhn? ":9"]
    ]

    it "non-numeric, non-space char in the middle with a sum that's divisible by 10 isn't allowed" [
        expects.be:'false? @[luhn? "59%59"]
    ]
]
