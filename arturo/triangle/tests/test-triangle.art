import.version:3.0.0 {unitt}! 
import {src/triangle}!

describe "Triangle" [
    describe "Triangle - Equilateral" [
        it "invalid: 0 0 0" [
            expects.be:'false? @[equilateral? 0 0 0]
        ]

        it "equilateral with floating point" [
            expects.be:'true? @[equilateral? 0.5 0.5 0.5]
        ]

        it "equilateral 2 2 2" [
            expects.be:'true? @[equilateral? 2 2 2]
        ]

        it "isosceles is not equilateral" [
            expects.be:'false? @[equilateral? 2 3 2]
        ]

        it "scalene is not equilateral" [
            expects.be:'false? @[equilateral? 5 4 6]
        ]
    ]

    describe "Triangle - Isosceles" [
        it "isosceles with floating point" [
            expects.be:'true? @[isosceles? 0.5 0.4 0.5]
        ]

        it "(invalid) isosceles 1 1 3, 3 in last position" [
            expects.be:'false? @[isosceles? 1 1 3]
        ]

        it "(invalid) isosceles 1 3 1, 3 in middle position" [
            expects.be:'false? @[isosceles? 1 3 1]
        ]

        it "(invalid) isosceles 3 1 1, 3 in first position" [
            expects.be:'false? @[isosceles? 3 1 1]
        ]

        it "isosceles 2 2 3, 3 in last position" [
            expects.be:'true? @[isosceles? 2 2 3]
        ]

        it "isosceles 2 3 2, 3 in middle position" [
            expects.be:'true? @[isosceles? 2 3 2]
        ]

        it "isosceles 3 2 2, 3 in first position" [
            expects.be:'true? @[isosceles? 3 2 2]
        ]

        it "is scalene and isosceles?" [
            expects.be:'false? @[isosceles? 2 3 4]
        ]

        it "equilateral is also isosceles" [
            expects.be:'true? @[isosceles? 4 4 4]
        ]
    ]

    describe "Triangle - Scalene" [
        it "scalene with floating point" [
            expects.be:'true? @[scalene? 0.5 0.4 0.6]
        ]

        it "isosceles is not scalene" [
            expects.be:'false? @[scalene? 4 4 3]
        ]

        it "equilateral is not scalene" [
            expects.be:'false? @[scalene? 4 4 4]
        ]

        it "scalene 5 4 6" [
            expects.be:'true? @[scalene? 5 4 6]
        ]

        it "triangle inequality rule violation" [
            expects.be:'false? @[scalene? 7 3 2]
        ]

        it "broken triangle #1" [
            expects.be:'false? @[scalene? 0 3 3]
        ]

        it "broken triangle #2" [
            expects.be:'false? @[scalene? 0 3 0]
        ]
    ]
]
