;; Making this a "global" means I don't have to pass it to all the functions.
;; Also, it acts as memoization for the next call to `prime`.
primes: [2 3]

prime: function [number][
    if not? positive? number -> return false
    while [number > size primes] -> append 'primes nextPrime
    primes\[number - 1]
]

nextPrime: function [][
    candidate: 2 + last primes
    while [not? prime? candidate][add 'candidate 2] 
    candidate
]

prime?: function [n][
    loop primes 'p [
        if n < p * p -> return true
        if zero? mod n p -> return false
    ]
    maybe
]
